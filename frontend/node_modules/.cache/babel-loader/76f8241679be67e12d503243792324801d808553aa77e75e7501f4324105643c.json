{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Fabiano\\\\Desktop\\\\to_do_app\\\\frontend\\\\src\\\\components\\\\pages\\\\Task\\\\MyTasks.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport CreateTask from \"./CreateTask\";\nimport useFlashMessage from \"../../../hooks/useFlashMessage\";\nimport styles from \"./Dashboard.module.css\";\nimport { deleteTask, concludeTask } from \"../../../hooks/taskService\";\nimport api from \"../../../utils/api\";\n\n// import rowstyles from \"../../form/Row.module.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction MyTask() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [token] = useState(localStorage.getItem(\"token\") || \"\");\n  const {\n    setFlashMessage\n  } = useFlashMessage();\n  useEffect(() => {\n    api.get(\"/tasks/mytasks\", {\n      headers: {\n        Authorization: `Bearer ${JSON.parse(token)}`\n      }\n    }).then(response => {\n      setTasks(response.data.tasks);\n    });\n  }, [token]);\n\n  // useEffect(() => {\n  //   async function fetchTasks() {\n  //     try {\n  //       const tasks = await getTasks(token);\n  //       setTasks(tasks);\n  //     } catch (err) {\n  //       setFlashMessage(err.message, \"error\");\n  //     }\n  //   }\n  //   fetchTasks();\n  // }, [token, setFlashMessage]);\n\n  async function handleRemoveTask(id) {\n    let msgType = \"success\";\n    try {\n      const data = await deleteTask(id, token);\n      setTasks(prevTasks => prevTasks.filter(task => task._id !== id));\n      setFlashMessage(data.message, msgType);\n    } catch (err) {\n      msgType = \"error\";\n      setFlashMessage(err.message, msgType);\n    }\n  }\n  async function handleConcludeTask(id) {\n    let msgType = \"success\";\n    try {\n      const data = await concludeTask(id, token);\n      setTasks(prevTasks => prevTasks.map(task => task._id === id ? {\n        ...task,\n        done: true\n      } : task));\n      setFlashMessage(data.message, msgType);\n    } catch (err) {\n      msgType = \"error\";\n      setFlashMessage(err.message, msgType);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.tasklist_container_all,\n      children: [/*#__PURE__*/_jsxDEV(CreateTask, {\n        tasks: tasks,\n        setTasks: setTasks\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.tasklist_header,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.tasklist_container,\n          children: [tasks.length > 0 && tasks.map(task => task && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.tasklist_row,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"bold\",\n              children: task.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"bold\",\n              children: task.effort\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"bold\",\n              children: task.period\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.actions,\n              children: task.done === false ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: styles.conclude_btn,\n                  onClick: () => handleConcludeTask(task._id),\n                  children: \"Concluir Task\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(Link, {\n                  to: `/task/edit/${task._id}`,\n                  children: \"Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleRemoveTask(task._id),\n                  children: \"Excluir\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleRemoveTask(task._id),\n                  children: \"Excluir\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Task concluida\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 23\n            }, this)]\n          }, task._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 21\n          }, this)), tasks.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"There is no Task added\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 36\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_s(MyTask, \"o47NNnl9/PuRzQN50dEK6zTcnEM=\", false, function () {\n  return [useFlashMessage];\n});\n_c = MyTask;\nexport default MyTask;\nvar _c;\n$RefreshReg$(_c, \"MyTask\");","map":{"version":3,"names":["useEffect","useState","Link","CreateTask","useFlashMessage","styles","deleteTask","concludeTask","api","jsxDEV","_jsxDEV","Fragment","_Fragment","MyTask","_s","tasks","setTasks","token","localStorage","getItem","setFlashMessage","get","headers","Authorization","JSON","parse","then","response","data","handleRemoveTask","id","msgType","prevTasks","filter","task","_id","message","err","handleConcludeTask","map","done","children","className","tasklist_container_all","fileName","_jsxFileName","lineNumber","columnNumber","tasklist_header","tasklist_container","length","tasklist_row","name","effort","period","actions","conclude_btn","onClick","to","_c","$RefreshReg$"],"sources":["C:/Users/Fabiano/Desktop/to_do_app/frontend/src/components/pages/Task/MyTasks.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport CreateTask from \"./CreateTask\";\r\nimport useFlashMessage from \"../../../hooks/useFlashMessage\";\r\nimport styles from \"./Dashboard.module.css\";\r\nimport { deleteTask, concludeTask } from \"../../../hooks/taskService\";\r\nimport api from \"../../../utils/api\";\r\n\r\n// import rowstyles from \"../../form/Row.module.css\";\r\n\r\nfunction MyTask() {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [token] = useState(localStorage.getItem(\"token\") || \"\");\r\n  const { setFlashMessage } = useFlashMessage();\r\n\r\n  useEffect(() => {\r\n    api\r\n      .get(\"/tasks/mytasks\", {\r\n        headers: {\r\n          Authorization: `Bearer ${JSON.parse(token)}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        setTasks(response.data.tasks);\r\n      });\r\n  }, [token]);\r\n\r\n  // useEffect(() => {\r\n  //   async function fetchTasks() {\r\n  //     try {\r\n  //       const tasks = await getTasks(token);\r\n  //       setTasks(tasks);\r\n  //     } catch (err) {\r\n  //       setFlashMessage(err.message, \"error\");\r\n  //     }\r\n  //   }\r\n  //   fetchTasks();\r\n  // }, [token, setFlashMessage]);\r\n\r\n  async function handleRemoveTask(id) {\r\n    let msgType = \"success\";\r\n\r\n    try {\r\n      const data = await deleteTask(id, token);\r\n      setTasks((prevTasks) => prevTasks.filter((task) => task._id !== id));\r\n      setFlashMessage(data.message, msgType);\r\n    } catch (err) {\r\n      msgType = \"error\";\r\n      setFlashMessage(err.message, msgType);\r\n    }\r\n  }\r\n\r\n  async function handleConcludeTask(id) {\r\n    let msgType = \"success\";\r\n\r\n    try {\r\n      const data = await concludeTask(id, token);\r\n      setTasks((prevTasks) =>\r\n        prevTasks.map((task) =>\r\n          task._id === id ? { ...task, done: true } : task\r\n        )\r\n      );\r\n      setFlashMessage(data.message, msgType);\r\n    } catch (err) {\r\n      msgType = \"error\";\r\n      setFlashMessage(err.message, msgType);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <section>\r\n      <div className={styles.tasklist_container_all}>\r\n        <CreateTask tasks={tasks} setTasks={setTasks} />\r\n        <div className={styles.tasklist_header}>\r\n          {/* <h1>My Tasks</h1> */}\r\n\r\n          <div className={styles.tasklist_container}>\r\n            {tasks.length > 0 &&\r\n              tasks.map(\r\n                (task) =>\r\n                  task && (\r\n                    <div className={styles.tasklist_row} key={task._id}>\r\n                      <span className=\"bold\">{task.name}</span>\r\n                      <span className=\"bold\">{task.effort}</span>\r\n                      <span className=\"bold\">{task.period}</span>\r\n                      <div className={styles.actions}>\r\n                        {task.done === false ? (\r\n                          <>\r\n                            <button\r\n                              className={styles.conclude_btn}\r\n                              onClick={() => handleConcludeTask(task._id)}\r\n                            >\r\n                              Concluir Task\r\n                            </button>\r\n\r\n                            <Link to={`/task/edit/${task._id}`}>Edit</Link>\r\n\r\n                            <button onClick={() => handleRemoveTask(task._id)}>\r\n                              Excluir\r\n                            </button>\r\n                          </>\r\n                        ) : (\r\n                          <>\r\n                            <button onClick={() => handleRemoveTask(task._id)}>\r\n                              Excluir\r\n                            </button>\r\n                            <p>Task concluida</p>\r\n                          </>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  )\r\n              )}\r\n            {tasks.length === 0 && <p>There is no Task added</p>}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* <div className={styles.add_btn}>\r\n        <Link to=\"/tasks/create\">Add Task</Link>\r\n      </div> */}\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default MyTask;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}