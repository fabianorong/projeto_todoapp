{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Fabiano\\\\Desktop\\\\to_do_app\\\\frontend\\\\src\\\\components\\\\pages\\\\Task\\\\MyTasks.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MyTask() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  // const [token] = useState(localStorage.getItem('token') || '')\n  // const { setFlashMessage } = useFlashMessage()\n\n  // useEffect(() => {\n  //   api\n  //     .get('/tasks/mytasks', {\n  //       headers: {\n  //         Authorization: `Bearer ${JSON.parse(token)}`,\n  //       },\n  //     })\n  //     .then((response) => {\n  //       setTasks(response.data.tasks)\n  //     })\n  // }, [token])\n\n  // async function removeTask(id) {\n  //   let msgType = 'success'\n\n  //   const data = await api\n  //     .delete(`/tasks/${id}`, {\n  //       headers: {\n  //         Authorization: `Bearer ${JSON.parse(token)}`,\n  //       },\n  //     })\n  //     .then((response) => {\n  //       const updatedPets = pets.filter((pet) => pet._id != id)\n  //       setPets(updatedPets)\n  //       return response.data\n  //     })\n  //     .catch((err) => {\n  //       console.log(err)\n  //       msgType = 'error'\n  //       return err.response.data\n  //     })\n\n  //   setFlashMessage(data.message, msgType)\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"My Tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/tasks/create\",\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [tasks.length > 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"My Tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 32\n        }, this), tasks.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"There is no Task added\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 34\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(MyTask, \"+34uIVDBalDkucWnJ7Aj1Xxb0MA=\");\n_c = MyTask;\nexport default MyTask;\nvar _c;\n$RefreshReg$(_c, \"MyTask\");","map":{"version":3,"names":["useState","Link","jsxDEV","_jsxDEV","MyTask","_s","tasks","setTasks","children","fileName","_jsxFileName","lineNumber","columnNumber","to","length","_c","$RefreshReg$"],"sources":["C:/Users/Fabiano/Desktop/to_do_app/frontend/src/components/pages/Task/MyTasks.js"],"sourcesContent":["import { useState } from \"react\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction MyTask() {\r\n  const [tasks, setTasks] = useState([]);\r\n  // const [token] = useState(localStorage.getItem('token') || '')\r\n  // const { setFlashMessage } = useFlashMessage()\r\n\r\n  // useEffect(() => {\r\n  //   api\r\n  //     .get('/tasks/mytasks', {\r\n  //       headers: {\r\n  //         Authorization: `Bearer ${JSON.parse(token)}`,\r\n  //       },\r\n  //     })\r\n  //     .then((response) => {\r\n  //       setTasks(response.data.tasks)\r\n  //     })\r\n  // }, [token])\r\n\r\n  // async function removeTask(id) {\r\n  //   let msgType = 'success'\r\n\r\n  //   const data = await api\r\n  //     .delete(`/tasks/${id}`, {\r\n  //       headers: {\r\n  //         Authorization: `Bearer ${JSON.parse(token)}`,\r\n  //       },\r\n  //     })\r\n  //     .then((response) => {\r\n  //       const updatedPets = pets.filter((pet) => pet._id != id)\r\n  //       setPets(updatedPets)\r\n  //       return response.data\r\n  //     })\r\n  //     .catch((err) => {\r\n  //       console.log(err)\r\n  //       msgType = 'error'\r\n  //       return err.response.data\r\n  //     })\r\n\r\n  //   setFlashMessage(data.message, msgType)\r\n  // }\r\n\r\n  return (\r\n    <section>\r\n      <div>\r\n        <h1>My Tasks</h1>\r\n        <Link to=\"/tasks/create\">Add Task</Link>\r\n        <div>\r\n          {tasks.length > 0 && <p>My Tasks</p>}\r\n          {tasks.length === 0 && <p>There is no Task added</p>}\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default MyTask;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAEhC,SAASC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAEA,oBACEG,OAAA;IAAAK,QAAA,eACEL,OAAA;MAAAK,QAAA,gBACEL,OAAA;QAAAK,QAAA,EAAI;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACjBT,OAAA,CAACF,IAAI;QAACY,EAAE,EAAC,eAAe;QAAAL,QAAA,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACxCT,OAAA;QAAAK,QAAA,GACGF,KAAK,CAACQ,MAAM,GAAG,CAAC,iBAAIX,OAAA;UAAAK,QAAA,EAAG;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,EACnCN,KAAK,CAACQ,MAAM,KAAK,CAAC,iBAAIX,OAAA;UAAAK,QAAA,EAAG;QAAsB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEd;AAACP,EAAA,CApDQD,MAAM;AAAAW,EAAA,GAANX,MAAM;AAsDf,eAAeA,MAAM;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}