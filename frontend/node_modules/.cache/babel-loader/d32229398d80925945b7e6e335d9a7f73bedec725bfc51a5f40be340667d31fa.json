{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Fabiano\\\\Desktop\\\\to_do_app\\\\frontend\\\\src\\\\components\\\\pages\\\\Task\\\\MyTasks.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport api from \"../../../utils/api\";\nimport styles from \"./Dashboard.module.css\";\nimport { Link } from \"react-router-dom\";\nimport useFlashMessage from \"../../../hooks/useFlashMessage\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction MyTask() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [token] = useState(localStorage.getItem(\"token\") || \"\");\n  const {\n    setFlashMessage\n  } = useFlashMessage();\n  useEffect(() => {\n    api.get(\"/tasks/mytasks\", {\n      headers: {\n        Authorization: `Bearer ${JSON.parse(token)}`\n      }\n    }).then(response => {\n      setTasks(response.data.tasks);\n    });\n  }, [token]);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.tasklist_header,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"My Tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.tasklist_container,\n        children: [tasks.length > 0 && tasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.tasklist_row,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"bold\",\n            children: task.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.actions,\n            children: task.done === false ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: styles.conclude_btn,\n                children: \"Concluir Task\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                to: `/task/edit/${task._id}`,\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                children: \"Excluir\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Task concluida\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.add_btn,\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/tasks/create\",\n              children: \"Add Task\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 17\n          }, this)]\n        }, task._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 15\n        }, this)), tasks.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"There is no Task added\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 34\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(MyTask, \"o47NNnl9/PuRzQN50dEK6zTcnEM=\", false, function () {\n  return [useFlashMessage];\n});\n_c = MyTask;\nexport default MyTask;\nvar _c;\n$RefreshReg$(_c, \"MyTask\");","map":{"version":3,"names":["useEffect","useState","api","styles","Link","useFlashMessage","jsxDEV","_jsxDEV","Fragment","_Fragment","MyTask","_s","tasks","setTasks","token","localStorage","getItem","setFlashMessage","get","headers","Authorization","JSON","parse","then","response","data","children","className","tasklist_header","fileName","_jsxFileName","lineNumber","columnNumber","tasklist_container","length","map","task","tasklist_row","name","actions","done","conclude_btn","to","_id","add_btn","_c","$RefreshReg$"],"sources":["C:/Users/Fabiano/Desktop/to_do_app/frontend/src/components/pages/Task/MyTasks.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport api from \"../../../utils/api\";\r\nimport styles from \"./Dashboard.module.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport useFlashMessage from \"../../../hooks/useFlashMessage\";\r\n\r\nfunction MyTask() {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [token] = useState(localStorage.getItem(\"token\") || \"\");\r\n  const { setFlashMessage } = useFlashMessage();\r\n\r\n  useEffect(() => {\r\n    api\r\n      .get(\"/tasks/mytasks\", {\r\n        headers: {\r\n          Authorization: `Bearer ${JSON.parse(token)}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        setTasks(response.data.tasks);\r\n      });\r\n  }, [token]);\r\n\r\n  return (\r\n    <section>\r\n      <div className={styles.tasklist_header}>\r\n        <h1>My Tasks</h1>\r\n        {/* <Link to=\"/tasks/create\">Add Task</Link> */}\r\n        <div className={styles.tasklist_container}>\r\n          {tasks.length > 0 &&\r\n            tasks.map((task) => (\r\n              <div className={styles.tasklist_row} key={task._id}>\r\n                <span className=\"bold\">{task.name}</span>\r\n                <div className={styles.actions}>\r\n                  {task.done === false ? (\r\n                    <>\r\n                      <button className={styles.conclude_btn}>\r\n                        Concluir Task\r\n                      </button>\r\n                      <Link to={`/task/edit/${task._id}`}>Edit</Link>\r\n                      <button>Excluir</button>\r\n                    </>\r\n                  ) : (\r\n                    <p>Task concluida</p>\r\n                  )}\r\n                </div>\r\n                <div className={styles.add_btn}>\r\n                  <Link to=\"/tasks/create\">Add Task</Link>\r\n                </div>\r\n              </div>\r\n            ))}\r\n\r\n          {tasks.length === 0 && <p>There is no Task added</p>}\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default MyTask;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}