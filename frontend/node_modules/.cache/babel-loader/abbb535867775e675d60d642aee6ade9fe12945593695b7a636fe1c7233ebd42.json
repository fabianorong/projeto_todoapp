{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Fabiano\\\\Desktop\\\\to_do_app\\\\frontend\\\\src\\\\components\\\\pages\\\\Auth\\\\ResetPassword.js\",\n  _s = $RefreshSig$();\nimport api from \"../../../utils/api\";\nimport { useState } from \"react\";\nimport Input from \"../../form/Input\";\nimport { useParams } from \"react-router-dom\";\nimport useFlashMessage from \"../../../hooks/useFlashMessage\";\nimport styles from \"../../form/Form.module.css\";\n\n//context\n// import { Context } from \"../../../context/UserContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ResetPassword() {\n  _s();\n  const [user, setUser] = useState({});\n  const {\n    token\n  } = useParams();\n  const {\n    setFlashMessage\n  } = useFlashMessage();\n  function handleChange(e) {\n    setUser({\n      ...user,\n      [e.target.name]: e.target.value\n    });\n  }\n  async function handleSubmit(e) {\n    e.preventDefault();\n    // let msgText = \"Password Updated\";\n    let msgType = \"success\";\n    const data = await api.patch(`users/resetpassword/${token}`, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => {\n      return response.data;\n    }).catch(error => {\n      msgType = \"error\";\n      return error.response.data;\n    });\n    // const data = await api\n    //   .patch(`users/resetpassword/${token}`)\n    //   .then((response) => {\n    //     return response.data;\n    //   })\n    //   .catch((error) => {\n    //     msgType = \"error\";\n    //     return error.response.data;\n    //   });\n\n    setFlashMessage(data.message, msgType);\n  }\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: styles.form_container,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Enter New Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        text: \"Password\",\n        type: \"password\",\n        name: \"password\"\n        // placeholder=\"Digite a sua senha\"\n        ,\n        handleOnChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        text: \"Confirm your Password\",\n        type: \"password\",\n        name: \"confirmpassword\"\n        // placeholder=\"Confirme a sua senha\"\n        ,\n        handleOnChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(ResetPassword, \"SDMNWb35u6iZZbzar+rR4qtAxW4=\", false, function () {\n  return [useParams, useFlashMessage];\n});\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["api","useState","Input","useParams","useFlashMessage","styles","jsxDEV","_jsxDEV","ResetPassword","_s","user","setUser","token","setFlashMessage","handleChange","e","target","name","value","handleSubmit","preventDefault","msgType","data","patch","headers","then","response","catch","error","message","className","form_container","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","text","type","handleOnChange","_c","$RefreshReg$"],"sources":["C:/Users/Fabiano/Desktop/to_do_app/frontend/src/components/pages/Auth/ResetPassword.js"],"sourcesContent":["import api from \"../../../utils/api\";\r\nimport { useState } from \"react\";\r\nimport Input from \"../../form/Input\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport useFlashMessage from \"../../../hooks/useFlashMessage\";\r\nimport styles from \"../../form/Form.module.css\";\r\n\r\n//context\r\n// import { Context } from \"../../../context/UserContext\";\r\n\r\nfunction ResetPassword() {\r\n  const [user, setUser] = useState({});\r\n  const { token } = useParams();\r\n  const { setFlashMessage } = useFlashMessage();\r\n\r\n  function handleChange(e) {\r\n    setUser({ ...user, [e.target.name]: e.target.value });\r\n  }\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n    // let msgText = \"Password Updated\";\r\n    let msgType = \"success\";\r\n\r\n    const data = await api\r\n      .patch(`users/resetpassword/${token}`, {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        return response.data;\r\n      })\r\n      .catch((error) => {\r\n        msgType = \"error\";\r\n        return error.response.data;\r\n      });\r\n    // const data = await api\r\n    //   .patch(`users/resetpassword/${token}`)\r\n    //   .then((response) => {\r\n    //     return response.data;\r\n    //   })\r\n    //   .catch((error) => {\r\n    //     msgType = \"error\";\r\n    //     return error.response.data;\r\n    //   });\r\n\r\n    setFlashMessage(data.message, msgType);\r\n  }\r\n\r\n  return (\r\n    <section className={styles.form_container}>\r\n      <h1>Enter New Password</h1>\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        <Input\r\n          text=\"Password\"\r\n          type=\"password\"\r\n          name=\"password\"\r\n          // placeholder=\"Digite a sua senha\"\r\n          handleOnChange={handleChange}\r\n        />\r\n        <Input\r\n          text=\"Confirm your Password\"\r\n          type=\"password\"\r\n          name=\"confirmpassword\"\r\n          // placeholder=\"Confirme a sua senha\"\r\n          handleOnChange={handleChange}\r\n        />\r\n        <input type=\"submit\" value=\"Confirm\" />\r\n      </form>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default ResetPassword;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}